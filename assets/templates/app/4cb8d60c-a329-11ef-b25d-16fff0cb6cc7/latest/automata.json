{
  "type": "automata",
  "properties": {
    "cache": false
  },
  "context": {
    "key_1731004782444": {
      "type": "text",
      "value": "0",
      "name": "click count"
    }
  },
  "initial": "key_1729790620672",
  "blocks": {
    "key_1729790620672": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "This app shows how to achieve different features in ShellAgent. Each button below represents an example of a feature.",
        "buttons": [
          {
            "content": "Chat",
            "on_click": {
              "event": "6120b338-8331-42b0-85fa-d092b6812a4a",
              "payload": {}
            },
            "id": "6120b338-8331-42b0-85fa-d092b6812a4a",
            "description": ""
          },
          {
            "content": "Random Transition",
            "on_click": {
              "event": "6875382b-8fa7-4b43-a13f-fb4d11d81281",
              "payload": {}
            },
            "id": "6875382b-8fa7-4b43-a13f-fb4d11d81281",
            "description": ""
          },
          {
            "content": "Use Global Variable",
            "on_click": {
              "event": "53d6f0a4-e860-4270-a780-5c18fd6fe27b",
              "payload": {}
            },
            "id": "53d6f0a4-e860-4270-a780-5c18fd6fe27b",
            "description": ""
          },
          {
            "content": "Call Same State With Different Inputs",
            "on_click": {
              "event": "b6e8e3fa-f4d4-440e-92bd-fa2543ed8db9",
              "payload": {}
            },
            "id": "b6e8e3fa-f4d4-440e-92bd-fa2543ed8db9",
            "description": ""
          },
          {
            "content": "Render Markdown/Image",
            "on_click": {
              "event": "d7d23f03-8cb9-4403-a100-bbf3716205fe",
              "payload": {}
            },
            "id": "d7d23f03-8cb9-4403-a100-bbf3716205fe",
            "description": ""
          },
          {
            "content": "Regenerate",
            "on_click": {
              "event": "939829f6-0a91-43e7-ba8d-b176dec587ea",
              "payload": {}
            },
            "id": "939829f6-0a91-43e7-ba8d-b176dec587ea",
            "description": ""
          }
        ]
      },
      "blocks": [],
      "inputs": {},
      "outputs": {},
      "transitions": {
        "6120b338-8331-42b0-85fa-d092b6812a4a": [
          {
            "target": "key_1731004797517"
          }
        ],
        "6875382b-8fa7-4b43-a13f-fb4d11d81281": [
          {
            "target": "key_1731007593384"
          }
        ],
        "53d6f0a4-e860-4270-a780-5c18fd6fe27b": [
          {
            "target": "key_1731016186627"
          }
        ],
        "b6e8e3fa-f4d4-440e-92bd-fa2543ed8db9": [
          {
            "target": "key_1731016503383"
          }
        ],
        "d7d23f03-8cb9-4403-a100-bbf3716205fe": [
          {
            "target": "key_1731017092731"
          }
        ],
        "939829f6-0a91-43e7-ba8d-b176dec587ea": [
          {
            "target": "key_1731440652559"
          }
        ]
      }
    },
    "key_1731004797517": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "This chat example has 2 states. The first state is for introduction content. The second is for accepting user's input and replying with GPT's response.\nPlease check the second state's Input, Task/GPT and Message to see how it works.",
        "buttons": [
          {
            "content": "End Chat",
            "on_click": {
              "event": "7ff36d30-b730-4f36-814a-26a7ec7e86af",
              "payload": {}
            },
            "id": "7ff36d30-b730-4f36-814a-26a7ec7e86af",
            "description": ""
          }
        ]
      },
      "blocks": [],
      "inputs": {},
      "transitions": {
        "CHAT": [
          {
            "target": "key_1731007331763"
          }
        ],
        "7ff36d30-b730-4f36-814a-26a7ec7e86af": [
          {
            "target": "key_1729790620672"
          }
        ]
      }
    },
    "key_1731007331763": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "{{key_1731437188188.reply}}",
        "buttons": [
          {
            "content": "End Chat",
            "on_click": {
              "event": "60d0e2b1-a849-416e-9785-b9bf976f331b",
              "payload": {}
            },
            "id": "60d0e2b1-a849-416e-9785-b9bf976f331b",
            "description": ""
          }
        ]
      },
      "blocks": [
        {
          "inputs": {
            "model": "gpt-3.5-turbo",
            "system_prompt": "",
            "user_prompt": "{{key_1731007361092}}",
            "input_image": null,
            "memory": [],
            "function_parameters": [],
            "memory_mode": "auto",
            "temperature": 0.7,
            "top_p": 1,
            "max_tokens": null,
            "stream": false,
            "presence_penalty": 0,
            "frequency_penalty": 0,
            "callback": null,
            "widget_run_id": null,
            "function_name": "any_function_name",
            "function_description": "any_function_description"
          },
          "outputs": {
            "display": {
              "reply": "string|object"
            }
          },
          "render": null,
          "type": "task",
          "display_name": "GPT",
          "name": "key_1731437188188",
          "mode": "widget",
          "widget_class_name": "GPTWidget"
        }
      ],
      "inputs": {
        "key_1731007361092": {
          "name": "prompt",
          "type": "text",
          "user_input": true,
          "source": "IM",
          "default_value": "default prompt"
        }
      },
      "transitions": {
        "CHAT": [
          {
            "target": "key_1731007331763"
          }
        ],
        "60d0e2b1-a849-416e-9785-b9bf976f331b": [
          {
            "target": "key_1729790620672"
          }
        ]
      }
    },
    "key_1731007593384": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "This random transition example will generate a number between 0 and 9 randomly. If the result is 0-4, it will go one state, else the other. \n\nIt has 3 states. All important parts are in the first state. which generates a random number and executes a conditional transition based on the result. \n- The Output part shows how to randomize a number. \n- The Transition part shows how to write condition expressions and how to set \"Target Input\" for target states.\n\nTip: This random transition example is not the final version. The randomization method is a bit tricky.",
        "buttons": [
          {
            "content": "Randomize",
            "on_click": {
              "event": "57ac7720-ced8-42ac-84b3-d3fee0d5cd9c",
              "payload": {}
            },
            "id": "57ac7720-ced8-42ac-84b3-d3fee0d5cd9c",
            "description": ""
          }
        ]
      },
      "blocks": [],
      "inputs": {},
      "outputs": {
        "key_1731008360535": {
          "type": "text",
          "value": "{{ int((time.time() % 1) * 1e6 % (10-0)) + 0 }}",
          "name": "random number"
        }
      },
      "transitions": {
        "57ac7720-ced8-42ac-84b3-d3fee0d5cd9c": [
          {
            "target": "key_1731007762330",
            "condition": "{{ key_1731008360535 < 5 }}",
            "target_inputs": {
              "key_1731008183587": "{{key_1731008360535}}"
            }
          },
          {
            "target": "key_1731008012254",
            "condition": "{{ key_1731008360535 > 4 }}",
            "target_inputs": {
              "key_1731009518966": "{{key_1731008360535}}"
            }
          }
        ]
      }
    },
    "key_1731007762330": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "Generated number: {{ key_1731008183587 }}. Should be <=4.",
        "buttons": [
          {
            "content": "Back To Home",
            "on_click": {
              "event": "43ee36f4-3d10-4dc6-a50d-df16e323921a",
              "payload": {}
            },
            "id": "43ee36f4-3d10-4dc6-a50d-df16e323921a",
            "description": ""
          },
          {
            "content": "Rerandomize",
            "on_click": {
              "event": "31cddc46-4731-424d-8590-23f114e0837c",
              "payload": {}
            },
            "id": "31cddc46-4731-424d-8590-23f114e0837c",
            "description": ""
          }
        ]
      },
      "blocks": [],
      "inputs": {
        "key_1731008183587": {
          "name": "random number",
          "type": "text",
          "user_input": false
        }
      },
      "transitions": {
        "43ee36f4-3d10-4dc6-a50d-df16e323921a": [
          {
            "target": "key_1729790620672"
          }
        ],
        "31cddc46-4731-424d-8590-23f114e0837c": [
          {
            "target": "key_1731007593384"
          }
        ]
      }
    },
    "key_1731008012254": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "Generated number: {{ key_1731009518966 }}. Should be >= 5.",
        "buttons": [
          {
            "content": "Back To Home",
            "on_click": {
              "event": "78f5b793-4fc5-479e-8289-0e4cfa60ff25",
              "payload": {}
            },
            "id": "78f5b793-4fc5-479e-8289-0e4cfa60ff25",
            "description": ""
          },
          {
            "content": "Rerandomize",
            "on_click": {
              "event": "87cfdc84-a47e-4fae-bb07-15838984c08a",
              "payload": {}
            },
            "id": "87cfdc84-a47e-4fae-bb07-15838984c08a",
            "description": ""
          }
        ]
      },
      "blocks": [],
      "inputs": {
        "key_1731009518966": {
          "name": "random number",
          "type": "text",
          "user_input": false
        }
      },
      "outputs": {},
      "transitions": {
        "78f5b793-4fc5-479e-8289-0e4cfa60ff25": [
          {
            "target": "key_1729790620672"
          }
        ],
        "87cfdc84-a47e-4fae-bb07-15838984c08a": [
          {
            "target": "key_1731007593384"
          }
        ]
      }
    },
    "key_1731016186627": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "This example shows how to read and write global variables. It will count how many times users click the \"Click\" button.\n\nBesides this state, it has 2 states. \n- \"Click\" state modifies the global variable \"click count\" and shows the modified value.\n-  \"Show Count\" state just reads the same variable but doesn't modify it.\n",
        "buttons": [
          {
            "content": "Click",
            "on_click": {
              "event": "4f090bda-0953-4171-bf6f-c517be3aec27",
              "payload": {}
            },
            "id": "4f090bda-0953-4171-bf6f-c517be3aec27",
            "description": ""
          },
          {
            "content": "Show Counts",
            "on_click": {
              "event": "066fd778-c241-4dd0-a3a1-9bee16f04243",
              "payload": {}
            },
            "id": "066fd778-c241-4dd0-a3a1-9bee16f04243",
            "description": ""
          },
          {
            "content": "Back To Home",
            "on_click": {
              "event": "8399a18e-dd38-48f7-a103-c73f1c12f162",
              "payload": {}
            },
            "id": "8399a18e-dd38-48f7-a103-c73f1c12f162",
            "description": ""
          }
        ]
      },
      "blocks": [],
      "inputs": {},
      "outputs": {},
      "transitions": {
        "12f42298-dcc9-4b1d-91f5-98254819cd44": [
          {
            "target": "key_1729790620672"
          }
        ],
        "8399a18e-dd38-48f7-a103-c73f1c12f162": [
          {
            "target": "key_1729790620672"
          }
        ],
        "4f090bda-0953-4171-bf6f-c517be3aec27": [
          {
            "target": "key_1731438818456"
          }
        ],
        "066fd778-c241-4dd0-a3a1-9bee16f04243": [
          {
            "target": "key_1731439294532"
          }
        ]
      }
    },
    "key_1731016503383": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "This example shows how to pass different values to one input of a single state.\n\nIt has 2 states.\n- The \"Passing Inputs\" state has 3 buttons. Each button is tied to a transition to the \"Accepting Inputs\" state. Please check the transitions' \"Target Inputs\" to see how to pass values.\n- The \"Accepting Inputs\" state has one input. This input's \"User Input\" field is set to false so that this input can be set by \"Target Inputs\".",
        "buttons": [
          {
            "content": "Style 1",
            "on_click": {
              "event": "7f9ea3bb-c7c5-4064-abc8-4c627e698dc1",
              "payload": {}
            },
            "id": "7f9ea3bb-c7c5-4064-abc8-4c627e698dc1",
            "description": ""
          },
          {
            "content": "Style 2",
            "on_click": {
              "event": "1e9e4325-f96f-426c-91c1-589f9606b99a",
              "payload": {}
            },
            "id": "1e9e4325-f96f-426c-91c1-589f9606b99a",
            "description": ""
          },
          {
            "content": "Style 3",
            "on_click": {
              "event": "80ef2de6-c29a-4278-9bef-15c21480fbe3",
              "payload": {}
            },
            "id": "80ef2de6-c29a-4278-9bef-15c21480fbe3",
            "description": ""
          }
        ]
      },
      "blocks": [],
      "inputs": {},
      "transitions": {
        "7f9ea3bb-c7c5-4064-abc8-4c627e698dc1": [
          {
            "target": "key_1731016529261",
            "target_inputs": {
              "key_1731016538235": "1"
            }
          }
        ],
        "1e9e4325-f96f-426c-91c1-589f9606b99a": [
          {
            "target": "key_1731016529261",
            "target_inputs": {
              "key_1731016538235": "2"
            }
          }
        ],
        "80ef2de6-c29a-4278-9bef-15c21480fbe3": [
          {
            "target": "key_1731016529261",
            "target_inputs": {
              "key_1731016538235": "3"
            }
          }
        ]
      }
    },
    "key_1731016529261": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "Accepted image: {{ key_1731016538235 }}",
        "buttons": [
          {
            "content": "Back To Home",
            "on_click": {
              "event": "0f1bb690-40c5-4b74-a9b2-c24dd6f0cae4",
              "payload": {}
            },
            "id": "0f1bb690-40c5-4b74-a9b2-c24dd6f0cae4",
            "description": ""
          }
        ]
      },
      "blocks": [],
      "inputs": {
        "key_1731016538235": {
          "name": "style",
          "type": "text",
          "user_input": false
        }
      },
      "transitions": {
        "0f1bb690-40c5-4b74-a9b2-c24dd6f0cae4": [
          {
            "target": "key_1729790620672"
          }
        ]
      }
    },
    "key_1731017092731": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "You can render:\n- Markdown content\n- Single/Multiple Images\n- Local file\n- Generated content\n\nTip1: This example doesn't show how to use generated content. It's similar to use any widget's generated result.\n\nTip2: We recommend not using remote file link. Only  MyShell links are accepted, e.g., \"https://www.myshellstatic.com/image/chat/embed_obj/202411060815/0fe677ec120842f5beb718f6927abada.gif\".",
        "buttons": [
          {
            "content": "Single Image",
            "on_click": {
              "event": "ac228972-0a6f-4e70-a155-79479f07e2fc",
              "payload": {}
            },
            "id": "ac228972-0a6f-4e70-a155-79479f07e2fc",
            "description": ""
          },
          {
            "content": "Multiple Image",
            "on_click": {
              "event": "c5d875bc-6e1c-44a9-8811-cebefb644ea2",
              "payload": {}
            },
            "id": "c5d875bc-6e1c-44a9-8811-cebefb644ea2",
            "description": ""
          }
        ]
      },
      "blocks": [],
      "inputs": {},
      "outputs": {},
      "transitions": {
        "aa779b73-4df4-45b0-aa04-aa2f202b3cf3": [
          {
            "target": "key_1729790620672"
          }
        ],
        "ac228972-0a6f-4e70-a155-79479f07e2fc": [
          {
            "target": "key_1731022629550"
          }
        ],
        "c5d875bc-6e1c-44a9-8811-cebefb644ea2": [
          {
            "target": "key_1731022659933"
          }
        ]
      }
    },
    "key_1731021998817": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "Similar word for {{ key_1731022060803 }}:\n{{ key_1731441612328.reply }}",
        "buttons": [
          {
            "content": "Regenerate",
            "on_click": {
              "event": "3d92b377-0984-4763-8ac6-f02cad5bb1d3",
              "payload": {}
            },
            "id": "3d92b377-0984-4763-8ac6-f02cad5bb1d3",
            "description": ""
          }
        ]
      },
      "blocks": [
        {
          "inputs": {
            "model": "gpt-3.5-turbo",
            "system_prompt": "Generate a similar word",
            "user_prompt": "{{key_1731022060803}}",
            "input_image": null,
            "memory": [],
            "function_parameters": [],
            "memory_mode": "auto",
            "temperature": 0.7,
            "top_p": 1,
            "max_tokens": null,
            "stream": false,
            "presence_penalty": 0,
            "frequency_penalty": 0,
            "callback": null,
            "widget_run_id": null,
            "function_name": "any_function_name",
            "function_description": "any_function_description"
          },
          "outputs": {
            "display": {
              "reply": "string|object"
            }
          },
          "render": null,
          "type": "task",
          "display_name": "GPT",
          "name": "key_1731441612328",
          "mode": "widget",
          "widget_class_name": "GPTWidget"
        }
      ],
      "inputs": {
        "key_1731022060803": {
          "name": "english word",
          "type": "text",
          "user_input": true,
          "source": "form"
        }
      },
      "transitions": {
        "26a88ba1-42a0-4cea-9aa1-4df3f2c1924c": [
          {
            "target": "key_1731021998817"
          }
        ],
        "3d92b377-0984-4763-8ac6-f02cad5bb1d3": [
          {
            "target": "key_1731442179658",
            "target_inputs": {
              "key_1731442179663": "{{key_1731022060803}}"
            }
          }
        ]
      }
    },
    "key_1731022629550": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "Single image is rendered following certain rules to align with instant message apps' experience. Please check [the rules](https://www.notion.so/myshellai/FAQ-10d3f81ff51e8054b60ad7a23aed1fa6?pvs=4#1373f81ff51e8068b20bd816a1ebc784).",
        "image": "https://www.myshellstatic.com/image/chat/embed_obj/202411122156/9ff86246dc344b0dbbb8abfec226c936.jpeg"
      },
      "blocks": [],
      "inputs": {},
      "transitions": {}
    },
    "key_1731022659933": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "Multiple images are rendered following certain rules to align with instant message apps' experience. Please check [the rules](https://www.notion.so/myshellai/FAQ-10d3f81ff51e8054b60ad7a23aed1fa6?pvs=4#1383f81ff51e806bba6cfbd12f3f38b9).",
        "image": "{{ [key_1731025752183, key_1731025759555] }}"
      },
      "blocks": [],
      "inputs": {},
      "outputs": {
        "key_1731025752183": {
          "type": "image",
          "value": "https://www.myshellstatic.com/image/chat/embed_obj/202411122156/9ff86246dc344b0dbbb8abfec226c936.jpeg",
          "name": "image1"
        },
        "key_1731025759555": {
          "type": "image",
          "value": "https://www.myshellstatic.com/image/chat/embed_obj/202411122156/00fcebc5504c42c39a0e03209a24b0fd.jpeg",
          "name": "image2"
        }
      },
      "transitions": {}
    },
    "key_1731438818456": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "Click: {{ context.key_1731004782444 }}",
        "buttons": [
          {
            "content": "Click",
            "on_click": {
              "event": "956bd89e-c9f3-4141-8ed7-d46418d39c07",
              "payload": {}
            },
            "id": "956bd89e-c9f3-4141-8ed7-d46418d39c07",
            "description": ""
          },
          {
            "content": "Show Counts",
            "on_click": {
              "event": "71d0e180-c270-4323-a797-e73caf1f392e",
              "payload": {}
            },
            "id": "71d0e180-c270-4323-a797-e73caf1f392e",
            "description": ""
          },
          {
            "content": "Back To Home",
            "on_click": {
              "event": "a647c5d2-5f4c-4225-a3ee-95dc2677a4d4",
              "payload": {}
            },
            "id": "a647c5d2-5f4c-4225-a3ee-95dc2677a4d4",
            "description": ""
          }
        ]
      },
      "blocks": [],
      "inputs": {},
      "outputs": {
        "context.key_1731004782444": {
          "type": "text",
          "value": "{{ int(context.key_1731004782444)+ 1 }}",
          "name": "Start-Context/click count",
          "name_mode": "ref"
        }
      },
      "transitions": {
        "956bd89e-c9f3-4141-8ed7-d46418d39c07": [
          {
            "target": "key_1731438818456"
          }
        ],
        "a647c5d2-5f4c-4225-a3ee-95dc2677a4d4": [
          {
            "target": "key_1729790620672"
          }
        ],
        "71d0e180-c270-4323-a797-e73caf1f392e": [
          {
            "target": "key_1731439294532"
          }
        ]
      }
    },
    "key_1731439294532": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "This state only shows the result: {{ context.key_1731004782444 }}",
        "buttons": [
          {
            "content": "Click",
            "on_click": {
              "event": "6ccea65a-4fb4-4af2-adbf-f2c9ae482936",
              "payload": {}
            },
            "id": "6ccea65a-4fb4-4af2-adbf-f2c9ae482936",
            "description": ""
          },
          {
            "content": "Show Counts",
            "on_click": {
              "event": "14a16cab-5a73-4e0f-8225-0582482f279c",
              "payload": {}
            },
            "id": "14a16cab-5a73-4e0f-8225-0582482f279c",
            "description": ""
          },
          {
            "content": "Back To Home",
            "on_click": {
              "event": "e8ff0da8-3d85-41d2-90a3-6212a82d9ea2",
              "payload": {}
            },
            "id": "e8ff0da8-3d85-41d2-90a3-6212a82d9ea2",
            "description": ""
          }
        ]
      },
      "blocks": [],
      "inputs": {},
      "outputs": {},
      "transitions": {
        "14a16cab-5a73-4e0f-8225-0582482f279c": [
          {
            "target": "key_1731439294532"
          }
        ],
        "6ccea65a-4fb4-4af2-adbf-f2c9ae482936": [
          {
            "target": "key_1731438818456"
          }
        ],
        "e8ff0da8-3d85-41d2-90a3-6212a82d9ea2": [
          {
            "target": "key_1729790620672"
          }
        ]
      }
    },
    "key_1731440652559": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "This regeneration example shows how to use user inputs to regenerate content. \n\nIt has 2 states. \n- 'Generate' state accepts user inputs and generate content. The \"Regenerate\" button transits to \"Regenerate\" state and fill in all inputs by \"Target Inputs\".\n- \"Regenerate\" state is copied from \"Generate\" state but all inputs' \"User Input\" fields are set to false. It also transits to itself and fill in all inputs by \"Target Inputs\"\n\nTip: Another way to regenerate is to provide the same form but with previous inputs as default value.\nWe don't recommend this way except your users may modify inputs a bit but multiple times. It is because \"Regenerate\" or \"Again\" implies the same inputs and it reduces users' operation.",
        "buttons": [
          {
            "content": "Generate",
            "on_click": {
              "event": "b833b5f6-0b89-4a61-b3d8-7960a398c56f",
              "payload": {}
            },
            "id": "b833b5f6-0b89-4a61-b3d8-7960a398c56f",
            "description": ""
          }
        ]
      },
      "blocks": [],
      "inputs": {},
      "transitions": {
        "b833b5f6-0b89-4a61-b3d8-7960a398c56f": [
          {
            "target": "key_1731021998817"
          }
        ]
      }
    },
    "key_1731442179658": {
      "type": "state",
      "name": "State",
      "render": {
        "text": "Similar word for {{ key_1731442179663 }}:\n{{ key_1731442179662.reply }}",
        "buttons": [
          {
            "content": "Regenerate",
            "on_click": {
              "event": "bcaa72c3-1797-4f05-ac49-a0d264125b15",
              "payload": {}
            },
            "id": "bcaa72c3-1797-4f05-ac49-a0d264125b15",
            "description": ""
          }
        ]
      },
      "blocks": [
        {
          "inputs": {
            "model": "gpt-3.5-turbo",
            "system_prompt": "Generate a similar word",
            "user_prompt": "{{key_1731442179663}}",
            "input_image": null,
            "memory": [],
            "function_parameters": [],
            "memory_mode": "auto",
            "temperature": 0.7,
            "top_p": 1,
            "max_tokens": null,
            "stream": false,
            "presence_penalty": 0,
            "frequency_penalty": 0,
            "callback": null,
            "widget_run_id": null,
            "function_name": "any_function_name",
            "function_description": "any_function_description"
          },
          "outputs": {
            "display": {
              "reply": "string|object"
            }
          },
          "render": null,
          "type": "task",
          "display_name": "GPT",
          "name": "key_1731442179662",
          "mode": "widget",
          "widget_class_name": "GPTWidget"
        }
      ],
      "inputs": {
        "key_1731442179663": {
          "name": "english word",
          "type": "text",
          "user_input": false,
          "source": "form"
        }
      },
      "outputs": {},
      "transitions": {
        "bcaa72c3-1797-4f05-ac49-a0d264125b15": [
          {
            "target": "key_1731442179658",
            "target_inputs": {
              "key_1731442179663": "{{key_1731442179663}}"
            }
          }
        ]
      }
    }
  },
  "transitions": {}
}